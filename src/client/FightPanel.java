package client;

import championAssets.*;
import java.awt.Image;
import java.util.Optional;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import server.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author wygon
 */
public class FightPanel extends javax.swing.JFrame {

    private CardPanel parentPanel;
    private String gameId;
    private Champion allyChampion;
    private GameClient client;
    
    private String enemyName;
    private String enemyChampionName;
    private Champion enemyChampion;
    
    public FightPanel(String gameId, GameClient client, String enemyName, String enemyChampionName)
    {
        this.gameId = gameId;
        this.client = client;
        this.parentPanel = client.getUi();
        this.enemyName = enemyName;
        this.enemyChampionName = enemyChampionName;
        allyChampion = client.choosenChampion;
        
        Optional<Champion> ec = parentPanel.getChampionListModel().stream()
                .filter(p -> p.getName().equals(enemyChampionName))
                .findAny();
        
        enemyChampion = ec.get();
        
        initComponents();
        AfterInit();
    }
//    public FightPanel(CardPanel parentPanel, String gameId, String opponentName, Champion champion) {
//        this.parentPanel = parentPanel;
//        this.gameId = gameId;
//        this.enemyName = opponentName;
//        this.playerChampion = champion;
//        
//        initComponents();
//        AfterInit();
////        startGame();
//    }
    void AfterInit(){
//        returnButton.setVisible(false);
        Ability[] abilities = allyChampion.getAbilities();
        allyChampionNameLabel.setText(client.name + " " + allyChampion.getName());
        Image aimg = allyChampion.getIcon().getImage();
        Image ascaledImg = aimg.getScaledInstance(allyChampionPanel.getWidth(), -1, Image.SCALE_SMOOTH);
        allyChampionIconLabel.setIcon(new ImageIcon(ascaledImg));
        
        allyChampionHpBar.setMaximum((int) allyChampion.getHP());
        allyChampionHpBar.setValue((int) allyChampion.getHP());
        allyChampionHpLabel.setText(String.valueOf(allyChampion.getHP()));// + " / " + String.valueOf(allyChampion.getMaxHP()));
        //==========================================
        enemyChampionNameLabel.setText(enemyName + " " + enemyChampion.getName());
        Image eimg = enemyChampion.getIcon().getImage();
        Image escaledImg = eimg.getScaledInstance(enemyChampionPanel.getWidth(), -1, Image.SCALE_SMOOTH);
        enemyChampionIconLabel.setIcon(new ImageIcon(escaledImg));
        
        enemyChampionHpBar.setMaximum((int) enemyChampion.getHP());
        enemyChampionHpBar.setValue((int) enemyChampion.getHP());
        enemyChampionHpLabel.setText(String.valueOf(enemyChampion.getHP()));// + " / " + String.valueOf(enemyChampion.getMaxHP()));
        
        logTextArea.setText("GAME ID: " + gameId + "\n" + allyChampion.getName() + " VS " + enemyChampion.getName() + "\n");
        
        ability2.setVisible(false);
        ability3.setVisible(false);
        ability4.setVisible(false);
        ability5.setVisible(false);
        ability6.setVisible(false);
        
        ability1.setText(abilities[0].getName());
        if(abilities.length > 1) {
            ability2.setText(abilities[1].getName());
            ability2.setVisible(true);
            if(abilities.length > 2) {
                ability3.setText(abilities[2].getName());
                ability3.setVisible(true);
                if(abilities.length > 3) {
                    ability4.setText(abilities[3].getName());
                    ability4.setVisible(true);
                    if(abilities.length > 4) {
                        ability5.setText(abilities[4].getName());
                        ability5.setVisible(true);
                        if(abilities.length > 5) {
                            ability6.setText(abilities[5].getName());
                            ability6.setVisible(true);
        }}}}}
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        allyChampionPanel = new javax.swing.JPanel();
        allyChampionNameLabel = new javax.swing.JLabel();
        allyChampionHpBar = new javax.swing.JProgressBar();
        allyChampionIconLabel = new javax.swing.JLabel();
        allyChampionHpLabel = new javax.swing.JLabel();
        enemyChampionPanel = new javax.swing.JPanel();
        enemyChampionNameLabel = new javax.swing.JLabel();
        enemyChampionHpBar = new javax.swing.JProgressBar();
        enemyChampionIconLabel = new javax.swing.JLabel();
        enemyChampionHpLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        autoAttackButton1 = new javax.swing.JButton();
        endTourButton = new javax.swing.JButton();
        leaveButton = new javax.swing.JButton();
        ability1 = new javax.swing.JButton();
        ability2 = new javax.swing.JButton();
        ability3 = new javax.swing.JButton();
        ability4 = new javax.swing.JButton();
        ability5 = new javax.swing.JButton();
        ability6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        allyChampionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 102)));
        allyChampionPanel.setPreferredSize(new java.awt.Dimension(300, 300));

        allyChampionNameLabel.setText("ALLY NAME");

        allyChampionHpBar.setValue(66);

        allyChampionIconLabel.setText("PHOTO");

        allyChampionHpLabel.setText("HEALTH/MAXHEALTH");

        javax.swing.GroupLayout allyChampionPanelLayout = new javax.swing.GroupLayout(allyChampionPanel);
        allyChampionPanel.setLayout(allyChampionPanelLayout);
        allyChampionPanelLayout.setHorizontalGroup(
            allyChampionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(allyChampionHpBar, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, allyChampionPanelLayout.createSequentialGroup()
                .addGroup(allyChampionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(allyChampionNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(allyChampionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(allyChampionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(allyChampionHpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(allyChampionIconLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        allyChampionPanelLayout.setVerticalGroup(
            allyChampionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allyChampionPanelLayout.createSequentialGroup()
                .addComponent(allyChampionHpBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(allyChampionHpLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allyChampionNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(allyChampionIconLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addContainerGap())
        );

        enemyChampionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 102)));
        enemyChampionPanel.setPreferredSize(new java.awt.Dimension(300, 300));

        enemyChampionNameLabel.setText("ENEMY NAME");

        enemyChampionHpBar.setValue(100);

        enemyChampionIconLabel.setText("PHOTO");

        enemyChampionHpLabel.setText("HEALTH/MAXHEALTH");

        javax.swing.GroupLayout enemyChampionPanelLayout = new javax.swing.GroupLayout(enemyChampionPanel);
        enemyChampionPanel.setLayout(enemyChampionPanelLayout);
        enemyChampionPanelLayout.setHorizontalGroup(
            enemyChampionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enemyChampionHpBar, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
            .addComponent(enemyChampionNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(enemyChampionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(enemyChampionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enemyChampionIconLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enemyChampionHpLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        enemyChampionPanelLayout.setVerticalGroup(
            enemyChampionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enemyChampionPanelLayout.createSequentialGroup()
                .addComponent(enemyChampionHpBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(enemyChampionHpLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enemyChampionNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enemyChampionIconLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                .addContainerGap())
        );

        autoAttackButton1.setText("Auto Attack");
        autoAttackButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoAttackButton1ActionPerformed(evt);
            }
        });

        endTourButton.setText("End tour");
        endTourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endTourButtonActionPerformed(evt);
            }
        });

        leaveButton.setText("Forfeit");
        leaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveButtonActionPerformed(evt);
            }
        });

        ability1.setText("skill1");

        ability2.setText("skill2");

        ability3.setText("skill3");

        ability4.setText("skill4");

        ability5.setText("skill5");

        ability6.setText("skill6");

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(autoAttackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(ability1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ability2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(endTourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(ability3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(ability4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addComponent(leaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(ability5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(ability6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ability1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autoAttackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ability2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ability4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ability3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endTourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ability6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ability5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(leaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        logTextArea.setColumns(20);
        logTextArea.setLineWrap(true);
        logTextArea.setRows(5);
        logTextArea.setText("[wygon][hit]: ashwaganda\n[wygon][hit]: ashwaganda\n[timoti][hit]: bombaklat\n[wygon][APPROVED]\n[wygon][FLED]\n[timoti] WON THE GAME!");
        logTextArea.setFocusable(false);
        jScrollPane1.setViewportView(logTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(allyChampionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(enemyChampionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(enemyChampionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allyChampionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void endTourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endTourButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endTourButtonActionPerformed

    private void leaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveButtonActionPerformed
        // TODO add your handling code here:\
//        onGameEnd();
        int returnToLobby = JOptionPane.showConfirmDialog(
                this,
                "Back to main menu",
                "Return",
                JOptionPane.YES_OPTION,
                JOptionPane.INFORMATION_MESSAGE);
        
        if(returnToLobby == JOptionPane.YES_OPTION)
        {
            client.sendMessage(GameCommand.FORFEIT.toString() + ">" + gameId + ">" + client.choosenChampion.getName() + ">" + enemyName);
        }
    }//GEN-LAST:event_leaveButtonActionPerformed

    private void autoAttackButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoAttackButton1ActionPerformed
        // TODO add your handling code here:
        client.sendMessage(
                GameCommand.ATTACK.toString() + ">" +
                gameId + ">" +        
                client.name + ">" +
                "aa");
    }//GEN-LAST:event_autoAttackButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FightPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FightPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FightPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FightPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FightPanel().setVisible(true);
//            }
//        });
    }
    
     public void endGame(boolean disconnected) {
       if (disconnected) {
           addGameMessage("Przeciwnik rozłączył się. Gra zakończona.");
       } else {
           addGameMessage("Gra zakończona.");
       }
       
       // Dodaj przycisk do interfejsu
   }
    public void addGameMessage(String mess)
    {
        logTextArea.append(mess + "\n");
        logTextArea.setCaretPosition(logTextArea.getDocument().getLength());
    }
    
    public void adjustUi(String gameId, String sender, String target, Double hp){
        if(target.equals(client.name)){
            allyChampionHpLabel.setText(
                    String.valueOf(
                            Double.parseDouble(allyChampionHpLabel.getText()) - hp
                    ));
        }else{            
            enemyChampionHpLabel.setText(
                    String.valueOf(
                            Double.parseDouble(enemyChampionHpLabel.getText()) - hp
                    ));
        
        }
        logTextArea.append(sender + "] hit [" + target + "] " + hp + "\n");
        logTextArea.setCaretPosition(logTextArea.getDocument().getLength());
    }
    
    public void onGameEnd()
    {
//        int returnToLobby = JOptionPane.showConfirmDialog(
//                this,
//                "Back to main menu",
//                "Return",
//                JOptionPane.YES_OPTION,
//                JOptionPane.INFORMATION_MESSAGE);
//        if(returnToLobby == JOptionPane.YES_OPTION)
//        {
//            setVisible(false);
//            parentPanel.setVisible(true);
//        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ability1;
    private javax.swing.JButton ability2;
    private javax.swing.JButton ability3;
    private javax.swing.JButton ability4;
    private javax.swing.JButton ability5;
    private javax.swing.JButton ability6;
    private javax.swing.JProgressBar allyChampionHpBar;
    private javax.swing.JLabel allyChampionHpLabel;
    private javax.swing.JLabel allyChampionIconLabel;
    private javax.swing.JLabel allyChampionNameLabel;
    private javax.swing.JPanel allyChampionPanel;
    private javax.swing.JButton autoAttackButton1;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton endTourButton;
    private javax.swing.JProgressBar enemyChampionHpBar;
    private javax.swing.JLabel enemyChampionHpLabel;
    private javax.swing.JLabel enemyChampionIconLabel;
    private javax.swing.JLabel enemyChampionNameLabel;
    private javax.swing.JPanel enemyChampionPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leaveButton;
    private javax.swing.JTextArea logTextArea;
    // End of variables declaration//GEN-END:variables
}
